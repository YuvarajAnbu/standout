{"version":3,"file":"static/js/118.fe2e96e8.chunk.js","mappings":"2NAyKA,UAjKA,WACE,IAAMA,GAAUC,EAAAA,EAAAA,MACRC,GAAYC,EAAAA,EAAAA,YAAWC,EAAAA,aAAvBF,QACAG,GAASF,EAAAA,EAAAA,YAAWG,EAAAA,aAApBD,KAER,GAAwCE,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAEA,GAAoDC,EAAAA,EAAAA,IAAQ,CAAC,GAArDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,OAAQC,EAAxC,EAAwCA,QAExC,GAA8BT,EAAAA,EAAAA,WAAS,GAAvC,eAAOU,EAAP,KAAgBC,EAAhB,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WACRC,SAASC,MAAQ,qBAClB,GAAE,KAuBD,iBAAKC,UAAU,mBAAf,WACE,gBAAKC,IAAI,uBAAuBC,IAAI,cACpC,iBAAKF,UAAU,qBAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,iBAAKA,UAAU,kCAAf,WACE,qCACA,iGAIF,SAAC,KAAD,CAAMG,GAAG,UAAT,UACE,mBAAQC,KAAK,SAAb,0BAGHhB,IACC,eACEY,UAAU,uDACVK,MAAO,CAAEC,UAAW,OAAQC,SAAU,QAFxC,WAIE,SAAC,IAAD,CAAiBC,KAAK,SAASR,UAAU,SAJ3C,sCAQF,kBACEA,UAAU,2BACVS,SAAUjB,GA9CD,SAACkB,GAChBd,GAAW,GACXP,GAAU,GACVsB,IAAAA,KACQ,cAAeD,GACpBE,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OACN,MAAM,IAAIC,MAEZnC,EAAQiC,EAAIH,KAAKM,MACjBpB,GAAW,GACXlB,EAAQuC,QAAQlC,EACjB,IACAmC,OAAM,SAACC,GACN9B,GAAU,GACVO,GAAW,GACXwB,QAAQC,IAAIF,EACb,GACJ,IA0BK,WAIE,iBAAKnB,UAAU,4CAAf,WACE,mBAAOsB,QAAQ,QAAf,4BACgB,oCAEhB,kBACEC,KAAK,QACLnB,KAAK,OACLoB,IAAKjC,EAAS,CACZkC,QAAS,CACPC,MAAO,qCACPC,QAAS,yBAEXC,SAAU,aAEZC,OAAQ,WACNnC,EAAQ,QACT,IAEsB,qBAAjBD,EAAOqC,QACb,eAAG9B,UAAU,uDAAb,WACE,SAAC,IAAD,CAAiBQ,KAAK,SAASR,UAAU,SAAU,IAClDP,EAAOqC,MAAMH,eAIpB,iBAAK3B,UAAU,4CAAf,WACE,mBAAOsB,QAAQ,WAAf,uBACW,oCAEX,iBACEtB,UAAU,gEACV+B,QAAS,WACPjC,SACGkC,cACC,wEAEDC,OACJ,EARH,WAUE,kBACEV,KAAK,WACLnB,KAAMlB,EAAe,WAAa,OAClCsC,IAAKjC,EAAS,CACZqC,SAAU,eAGb1C,GACC,SAAC,IAAD,CACEsB,KAAK,MACLR,UAAU,OACV+B,QAAS,SAACG,GACR/C,GAAgB,GAChBW,SACGkC,cACC,wEAEDC,OACJ,KAGH,SAAC,IAAD,CACEzB,KAAK,YACLR,UAAU,OACV+B,QAAS,WACP5C,GAAgB,EACjB,OAKqB,qBAApBM,EAAO0C,WACb,eAAGnC,UAAU,uDAAb,WACE,SAAC,IAAD,CAAiBQ,KAAK,SAASR,UAAU,SAAU,IAClDP,EAAO0C,SAASR,cAItBhC,GACC,mBACES,KAAK,SACLJ,UAAU,6EAFZ,UAIE,gBAAKA,UAAU,iDAGjB,mBAAQI,KAAK,SAAb,yBAGJ,eAAGJ,UAAU,6BAAb,6BACiB,SAAC,KAAD,CAAMG,GAAG,UAAT,mCAKxB,C","sources":["components/signupAndSignin/SignIn.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UserContext, PathContext } from \"../../App\";\r\nimport \"./SignUpAndSignIn.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction SignIn() {\r\n  const history = useHistory();\r\n  const { setUser } = useContext(UserContext);\r\n  const { path } = useContext(PathContext);\r\n\r\n  const [hidePassword, setHidePassword] = useState(true);\r\n\r\n  const [failed, setFailed] = useState(false);\r\n\r\n  const { register, handleSubmit, errors, trigger } = useForm({});\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Sign In | Stand Out\";\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    setLoading(true);\r\n    setFailed(false);\r\n    axios\r\n      .post(\"/user/login\", data)\r\n      .then((res) => {\r\n        if (res.status !== 200) {\r\n          throw new Error();\r\n        }\r\n        setUser(res.data.user);\r\n        setLoading(false);\r\n        history.replace(path);\r\n      })\r\n      .catch((err) => {\r\n        setFailed(true);\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-form signin\">\r\n      <img src=\"/images/shopping.jpg\" alt=\"shopping\" />\r\n      <div className=\"user-form__content\">\r\n        <div className=\"user-form__content__title\">\r\n          <div className=\"user-form__content__title__desc\">\r\n            <h1>Welcome</h1>\r\n            <p>\r\n              Explore millions of designs and stand out alone with your fashion\r\n            </p>\r\n          </div>\r\n          <Link to=\"/signup\">\r\n            <button type=\"button\">sign up</button>\r\n          </Link>\r\n        </div>\r\n        {failed && (\r\n          <p\r\n            className=\"user-form__content__form__input-container__error-msg\"\r\n            style={{ marginTop: \"20px\", maxWidth: \"100%\" }}\r\n          >\r\n            <FontAwesomeIcon icon=\"circle\" className=\"icon\" /> Incorrect\r\n            Username or Password\r\n          </p>\r\n        )}\r\n        <form\r\n          className=\"user-form__content__form\"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <div className=\"user-form__content__form__input-container\">\r\n            <label htmlFor=\"email\">\r\n              email address <span>*</span>\r\n            </label>\r\n            <input\r\n              name=\"email\"\r\n              type=\"text\"\r\n              ref={register({\r\n                pattern: {\r\n                  value: /^\\w{2,}@\\w{2,}\\.\\w{2,}(\\.\\w{2,})?$/,\r\n                  message: \"invalid email address\",\r\n                },\r\n                required: \"required\",\r\n              })}\r\n              onBlur={() => {\r\n                trigger(\"email\");\r\n              }}\r\n            />\r\n            {typeof errors.email !== \"undefined\" && (\r\n              <p className=\"user-form__content__form__input-container__error-msg\">\r\n                <FontAwesomeIcon icon=\"circle\" className=\"icon\" />{\" \"}\r\n                {errors.email.message}\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"user-form__content__form__input-container\">\r\n            <label htmlFor=\"password\">\r\n              password <span>*</span>\r\n            </label>\r\n            <div\r\n              className=\"user-form__content__form__input-container__password-container\"\r\n              onClick={() => {\r\n                document\r\n                  .querySelector(\r\n                    \".user-form__content__form__input-container__password-container input\"\r\n                  )\r\n                  .focus();\r\n              }}\r\n            >\r\n              <input\r\n                name=\"password\"\r\n                type={hidePassword ? \"password\" : \"text\"}\r\n                ref={register({\r\n                  required: \"required\",\r\n                })}\r\n              />\r\n              {hidePassword ? (\r\n                <FontAwesomeIcon\r\n                  icon=\"eye\"\r\n                  className=\"icon\"\r\n                  onClick={(e) => {\r\n                    setHidePassword(false);\r\n                    document\r\n                      .querySelector(\r\n                        \".user-form__content__form__input-container__password-container input\"\r\n                      )\r\n                      .focus();\r\n                  }}\r\n                />\r\n              ) : (\r\n                <FontAwesomeIcon\r\n                  icon=\"eye-slash\"\r\n                  className=\"icon\"\r\n                  onClick={() => {\r\n                    setHidePassword(true);\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            {typeof errors.password !== \"undefined\" && (\r\n              <p className=\"user-form__content__form__input-container__error-msg\">\r\n                <FontAwesomeIcon icon=\"circle\" className=\"icon\" />{\" \"}\r\n                {errors.password.message}\r\n              </p>\r\n            )}\r\n          </div>\r\n          {loading ? (\r\n            <button\r\n              type=\"button\"\r\n              className=\"user-form__content__form__button user-form__content__form__button--loading\"\r\n            >\r\n              <div className=\"user-form__content__form__button__loading\"></div>\r\n            </button>\r\n          ) : (\r\n            <button type=\"submit\">sign in</button>\r\n          )}\r\n        </form>\r\n        <p className=\"user-form__content__signup\">\r\n          Not a member ? <Link to=\"/signup\">join for free</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n"],"names":["history","useHistory","setUser","useContext","UserContext","path","PathContext","useState","hidePassword","setHidePassword","failed","setFailed","useForm","register","handleSubmit","errors","trigger","loading","setLoading","useEffect","document","title","className","src","alt","to","type","style","marginTop","maxWidth","icon","onSubmit","data","axios","then","res","status","Error","user","replace","catch","err","console","log","htmlFor","name","ref","pattern","value","message","required","onBlur","email","onClick","querySelector","focus","e","password"],"sourceRoot":""}